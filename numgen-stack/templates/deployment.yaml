# ===== Updated templates/deployment.yaml =====
{{- if .Values.numgen.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.numgen.app.name }}
  namespace: {{ .Values.numgen.app.namespace }}
  labels:
    {{- range $key, $value := .Values.numgen.app.labels }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
spec:
  {{- if not .Values.numgen.autoscaling.enabled }}
  replicas: {{ .Values.numgen.deployment.replicas }}
  {{- end }}
  strategy:
    type: {{ .Values.numgen.deployment.strategy.type }}
  selector:
    matchLabels:
      app: {{ .Values.numgen.app.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.numgen.app.name }}
        {{- range $key, $value := .Values.numgen.app.labels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
    spec:
      containers:
        - name: {{ .Values.numgen.container.name }}
          image: {{ .Values.numgen.image.repository }}:{{ .Values.numgen.image.tag }}
          imagePullPolicy: {{ .Values.numgen.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.numgen.container.port }}
          {{- if .Values.numgen.env }}
          env:
            {{- range .Values.numgen.env }}
            {{- if and . .name }}
            - name: {{ .name }}
              {{- if .value }}
              value: {{ tpl .value $ | quote }}
              {{- else if .valueFrom }}
              valueFrom:
                {{- if .valueFrom.secretKeyRef }}
                secretKeyRef:
                  name: {{ tpl .valueFrom.secretKeyRef.name $ }}
                  key: {{ .valueFrom.secretKeyRef.key }}
                {{- end }}
              {{- end }}
            {{- end }}
            {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.numgen.resources | nindent 12 }}
          {{- if .Values.numgen.probes.readiness.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.numgen.probes.readiness.httpGet.path }}
              port: {{ .Values.numgen.probes.readiness.httpGet.port }}
            initialDelaySeconds: {{ .Values.numgen.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.numgen.probes.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.numgen.probes.readiness.timeoutSeconds }}
            failureThreshold: {{ .Values.numgen.probes.readiness.failureThreshold }}
          {{- end }}
          {{- if .Values.numgen.probes.liveness.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.numgen.probes.liveness.httpGet.path }}
              port: {{ .Values.numgen.probes.liveness.httpGet.port }}
            initialDelaySeconds: {{ .Values.numgen.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.numgen.probes.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.numgen.probes.liveness.timeoutSeconds }}
            failureThreshold: {{ .Values.numgen.probes.liveness.failureThreshold }}
          {{- end }}
      {{- if .Values.numgen.security.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.numgen.security.imagePullSecrets | nindent 8 }}
      {{- end }}
{{- end }}

---

{{- if .Values.mongoExpress.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.mongoExpress.app.name }}
  namespace: {{ .Values.mongoExpress.app.namespace }}
  labels:
    {{- range $key, $value := .Values.mongoExpress.app.labels }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
spec:
  replicas: {{ .Values.mongoExpress.deployment.replicas }}
  strategy:
    type: {{ .Values.mongoExpress.deployment.strategy.type }}
  selector:
    matchLabels:
      app: {{ .Values.mongoExpress.app.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.mongoExpress.app.name }}
        {{- range $key, $value := .Values.mongoExpress.app.labels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
    spec:
      containers:
        - name: {{ .Values.mongoExpress.container.name }}
          image: {{ .Values.mongoExpress.image.repository }}:{{ .Values.mongoExpress.image.tag }}
          imagePullPolicy: {{ .Values.mongoExpress.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.mongoExpress.container.port }}
          {{- if .Values.mongoExpress.env }}
          env:
            {{- range .Values.mongoExpress.env }}
            {{- if and . .name }}
            - name: {{ .name }}
              {{- if .value }}
              value: {{ tpl .value $ | quote }}
              {{- else if .valueFrom }}
              valueFrom:
                {{- if .valueFrom.secretKeyRef }}
                secretKeyRef:
                  name: {{ tpl .valueFrom.secretKeyRef.name $ }}
                  key: {{ .valueFrom.secretKeyRef.key }}
                {{- end }}
              {{- end }}
            {{- end }}
            {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.mongoExpress.resources | nindent 12 }}
{{- end }}
