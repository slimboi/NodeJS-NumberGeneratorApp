# ===== Updated values.yaml (consolidated) =====
# Global configuration
global:
  storageClass: ""
  
# Application metadata
app:
  name: numgen
  namespace: numgen-app
  labels:
    app: numgen
    component: frontend

# NumGen Application Configuration
numgen:
  enabled: true
  
  # Image configuration
  image:
    repository: 475325513391.dkr.ecr.ap-southeast-2.amazonaws.com/nomcombo-app
    tag: "3288527"
    pullPolicy: IfNotPresent

  # Deployment configuration
  deployment:
    replicas: 2
    strategy:
      type: RollingUpdate

  # Container configuration
  container:
    name: numgen
    port: 3000

  # Environment variables
  env:
    - name: NODE_ENV
      value: "production"
    - name: PORT
      value: "3000"
    - name: MONGO_URI
      value: "mongodb://{{ .Release.Name }}-mongodb:27017/nomcomboDB"

  # Service configuration
  service:
    enabled: true
    type: NodePort
    port: 3000
    targetPort: 3000

  # Resource limits
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"

  # Auto-scaling configuration
  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  # Health checks
  probes:
    readiness:
      enabled: true
      type: httpGet
      httpGet:
        path: /
        port: 3000
      initialDelaySeconds: 10
      periodSeconds: 5
      timeoutSeconds: 3
      failureThreshold: 3
    liveness:
      enabled: true
      type: httpGet
      httpGet:
        path: /
        port: 3000
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3

  # Security configuration
  security:
    imagePullSecrets:
      - name: ecr-secret

# MongoDB Configuration (using Bitnami chart)
mongodb:
  enabled: true
  
  # Authentication (disabled to match your current setup)
  auth:
    enabled: false
    # If you want to enable auth later:
    # rootUser: root
    # rootPassword: ""
    # username: numgen
    # password: ""
    # database: nomcomboDB

  # Architecture
  architecture: standalone  # or replicaset for production

  # Persistence
  persistence:
    enabled: true
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    size: 1Gi

  # Resources
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"

  # Service configuration
  service:
    type: ClusterIP
    ports:
      mongodb: 27017

  # Monitoring and health checks
  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 20
    timeoutSeconds: 10
    failureThreshold: 6

  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 6

# Mongo Express Configuration
mongoExpress:
  enabled: true
  
  # Image configuration
  image:
    repository: mongo-express
    tag: "1-20-alpine3.19"
    pullPolicy: IfNotPresent

  # Deployment configuration
  deployment:
    replicas: 1
    strategy:
      type: RollingUpdate

  # Container configuration
  container:
    name: mongo-express
    port: 8081

  # Environment variables
  env:
    - name: ME_CONFIG_MONGODB_SERVER
      value: "{{ .Release.Name }}-mongodb"
    - name: ME_CONFIG_MONGODB_PORT
      value: "27017"
    # Add these if you enable MongoDB auth later:
    # - name: ME_CONFIG_MONGODB_ADMINUSERNAME
    #   value: "root"
    # - name: ME_CONFIG_MONGODB_ADMINPASSWORD
    #   valueFrom:
    #     secretKeyRef:
    #       name: "{{ .Release.Name }}-mongodb"
    #       key: mongodb-root-password

  # Service configuration
  service:
    enabled: true
    type: NodePort
    port: 8081
    targetPort: 8081

  # Resource limits
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"

  # Auto-scaling configuration
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 70

  # Health checks (disabled - Mongo Express doesn't have dedicated health endpoints)
  probes:
    readiness:
      enabled: false
    liveness:
      enabled: false

  # Security configuration
  security:
    imagePullSecrets: []


