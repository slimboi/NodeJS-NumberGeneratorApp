# name: Node.js CI with Docker + ECR

# on:
#   push:
#     branches:
#       - main
#       - 'feature/**'
#   pull_request:
#     branches:
#       - main
#       - 'feature/**'

# jobs:
#   quality-checks:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v3

#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '20'

#       - name: Install Dependencies
#         run: npm ci
#         working-directory: app-docker-multistage

#       - name: Run ESLint
#         run: npm run lint
#         working-directory: app-docker-multistage

#       - name: Run Tests
#         run: npm test
#         working-directory: app-docker-multistage

#       - name: Build Docker Image with Short SHA
#         id: build
#         run: |
#           SHORT_SHA=${GITHUB_SHA::7}
#           echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV
#           docker build -t nomcombo-app:$SHORT_SHA .
#         working-directory: app-docker-multistage

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v4
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}

#       - name: Login to Amazon ECR
#         run: |
#           aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
#             | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY }}

#       - name: Tag and Push to ECR
#         run: |
#           docker tag nomcombo-app:${{ env.SHORT_SHA }} ${{ secrets.ECR_REPOSITORY }}:${{ env.SHORT_SHA }}
#           docker push ${{ secrets.ECR_REPOSITORY }}:${{ env.SHORT_SHA }}


name: Node.js CI with Docker + ECR

on:
  push:
    branches:
      - main
      - 'feature/**'
  pull_request:
    branches:
      - main
      - 'feature/**'

jobs:
  checkout:
    name: Checkout Code
    runs-on: ubuntu-latest

    outputs:
      short_sha: ${{ steps.set-sha.outputs.short_sha }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Set Short SHA
        id: set-sha
        run: echo "short_sha=${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"

  lint:
    name: ESLint Check
    runs-on: ubuntu-latest
    needs: checkout

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - run: npm ci
        working-directory: app-docker-multistage

      - run: npm run lint
        working-directory: app-docker-multistage

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - run: npm ci
        working-directory: app-docker-multistage

      - run: npm test
        working-directory: app-docker-multistage

  docker-build:
    name: 🐳 Docker Build
    runs-on: ubuntu-latest
    needs: test

    outputs:
      image_tag: ${{ steps.set-image.outputs.image_tag }}

    steps:
      - uses: actions/checkout@v3

      - name: Build Docker Image
        id: set-image
        working-directory: app-docker-multistage
        run: |
          SHORT_SHA=${GITHUB_SHA::7}
          docker build -t nomcombo-app:$SHORT_SHA .
          echo "image_tag=$SHORT_SHA" >> "$GITHUB_OUTPUT"

  docker-push:
    name: Push to ECR
    runs-on: ubuntu-latest
    needs: docker-build

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
            | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY }}

      - name: Push Docker Image
        run: |
          SHORT_SHA=${GITHUB_SHA::7}
          docker tag nomcombo-app:$SHORT_SHA ${{ secrets.ECR_REPOSITORY }}:$SHORT_SHA
          docker push ${{ secrets.ECR_REPOSITORY }}:$SHORT_SHA