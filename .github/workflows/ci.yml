name: Node.js CI with Docker + Docker Hub + Helm Update
on:
  push:
    branches:
      - main
      # - 'feature/**'
    paths-ignore:
      # - 'README.md'
      - '*.md'
      - '.gitignore'
  pull_request:
    branches:
      - main
      # - 'feature/**'
    paths-ignore:
      - 'README.md'
      - '*.md'
      - '.gitignore'
permissions:
  contents: write  # For git operations in helm update

jobs:
  checkout:
    name: Checkout Code
    runs-on: ubuntu-latest
    outputs:
      short_sha: ${{ steps.set-sha.outputs.short_sha }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Set Short SHA
        id: set-sha
        run: echo "short_sha=${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"

  lint:
    name: ESLint Check
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm ci
        working-directory: app-docker-multistage
      - run: npm run lint
        working-directory: app-docker-multistage

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm ci
        working-directory: app-docker-multistage
      - run: npm test
        working-directory: app-docker-multistage

  docker:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and Push Docker Image
        working-directory: app-docker-multistage
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          REPOSITORY_NAME: ${{ secrets.REPOSITORY_NAME }}
        run: |
          SHORT_SHA=${GITHUB_SHA::7}
          IMAGE=$DOCKERHUB_USERNAME/$REPOSITORY_NAME:$SHORT_SHA
          docker build -t $IMAGE .
          docker push $IMAGE
          echo "Image pushed: $IMAGE"

  update-helm:
    name: Update Helm Chart
    runs-on: ubuntu-latest
    needs: [checkout, docker]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Git Identity
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
      - name: Update Helm Chart with new image tag
        env:
          SHORT_SHA: ${{ needs.checkout.outputs.short_sha }}
        run: |
          # Only update the numgen image tag, not mongoExpress
          sed -i '/numgen:/,/mongoExpress:/ { /tag:/ { s/tag:.*/tag: "${{ env.SHORT_SHA }}"/; } }' ./numgen-stack/values.yaml
          git add ./numgen-stack/values.yaml
          git commit -m "Updated numgen image tag to ${{ env.SHORT_SHA }} [skip ci]"
          git push