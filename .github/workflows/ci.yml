name: Node.js CI with Docker + ECR

on:
  push:
    branches:
      - main
      - 'feature/**'
  pull_request:
    branches:
      - main
      - 'feature/**'

jobs:
  quality-checks:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm ci
        working-directory: app-docker-multistage

      - name: Run ESLint
        run: npm run lint
        working-directory: app-docker-multistage

      - name: Run Tests
        run: npm test
        working-directory: app-docker-multistage

      - name: Build Docker Image with Short SHA
        id: build
        run: |
          SHORT_SHA=${GITHUB_SHA::7}
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV
          docker build -t nomcombo-app:$SHORT_SHA .
        working-directory: app-docker-multistage

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
            | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY }}

      - name: Tag and Push to ECR
        run: |
          docker tag nomcombo-app:${{ env.SHORT_SHA }} ${{ secrets.ECR_REPOSITORY }}:${{ env.SHORT_SHA }}
          docker push ${{ secrets.ECR_REPOSITORY }}:${{ env.SHORT_SHA }}