apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  namespace: {{ .Values.global.namespace }}
spec:
  replicas: {{ .Values.mongodb.replicas }}
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: {{ .Values.mongodb.image.repository }}:{{ .Values.mongodb.image.tag }}
        imagePullPolicy: {{ .Values.mongodb.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.mongodb.service.targetPort }}
        {{- if .Values.mongodb.persistence.enabled }}
        volumeMounts:
        - name: mongo-data
          mountPath: /data/db
        {{- end }}
        resources:
          {{- toYaml .Values.mongodb.resources | nindent 10 }}
        readinessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 3
        livenessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
      {{- if .Values.mongodb.persistence.enabled }}
      volumes:
      - name: mongo-data
        persistentVolumeClaim:
          claimName: mongodb-pvc
      {{- end }}